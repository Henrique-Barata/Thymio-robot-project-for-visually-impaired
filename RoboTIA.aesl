<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="27889" name="thymio-II"># variables for state
var state[4] = [0,0,0,0]
var new_state[4] = [0,0,0,0]

# variables for notes
var notes[6]
var durations[6]
var note_index = 6
var note_count = 6
var wave[142]
var i
var wave_phase
var wave_intensity
var estado = 0
var mike = 0
var gameover = 0

# compute a sinus wave for sound
for i in 0:141 do
	wave_phase = (i-70)*468
	call math.cos(wave_intensity, wave_phase)
	wave[i] = wave_intensity/256
end
call sound.wave(wave)
# stop timer 0
timer.period[0] = 0
# reset outputs
call sound.system(-1)
call leds.top(0,0,0)
call leds.bottom.left(0,0,0)
call leds.bottom.right(0,0,0)
call leds.circle(0,0,0,0,0,0,0,0)

# subroutine to display the current state
sub display_state
	call leds.circle(0,state[1]*32,0,state[3]*32,0,state[2]*32,0,state[0]*32)

# when a note is finished, play the next note



onevent sound.finished
	if note_index != note_count then
		call sound.freq(notes[note_index], durations[note_index])
		note_index += 1
	end

onevent prox

			if  estado == 0 then
		
			else if estado == 1 then
				if prox.horizontal[2] >= 2500 then
					estado = 0
					motor.left.target = 0
					motor.right.target = 0		
					call math.copy(notes[0:4], [524, 0, 524, 0, 524])
					call math.copy(durations[0:4], [14, 14, 14, 14, 14])
					note_index = 1
					note_count = 5
					call sound.freq(notes[0], durations[0])
					motor.left.target = 0
					motor.right.target = 0	
					
				end
				if prox.horizontal[0] >= 3000 and prox.horizontal[2] &lt; 2500 then
					motor.left.target = 200
					motor.right.target = 0
				end
				
				if prox.horizontal[4] > 3000 and prox.horizontal[2] &lt; 2500 then
					motor.left.target = 0
					motor.right.target = 200
				end
				
				if prox.horizontal[1] >= 4000 and prox.horizontal[2] &lt; 2500 then
					motor.left.target = 100
					motor.right.target = -100
				end
				
				if prox.horizontal[3] > 4000 and prox.horizontal[2] &lt; 2500 then
					motor.left.target = -100
					motor.right.target = 100
				end
		
				if prox.horizontal[4] &lt; 2000 and prox.horizontal[0] &lt; 2000 and prox.horizontal[2] &lt; 2500 then
					motor.left.target = 200
					motor.right.target = 200
				end
				
				
			else if estado == 2 then
				if prox.horizontal[5] >= 3000 and prox.horizontal[6] &lt; 3000 then
					motor.left.target = -200
					motor.right.target = -100
				end
				
				if prox.horizontal[6] >= 3000 and prox.horizontal[5] &lt; 3000  then
					motor.left.target = -100
					motor.right.target = -200
				end
			end
			end
			end
		 	when prox.ground.delta[0] > 970 do
		 		if mike &lt; 2 then
		 			call sound.play(22)
		 			mike+=1	
		 			gameover = 0
		 	else
		 		call sound.play(5)
		 		motor.left.target = 0
		 		motor.right.target= 0
		 		estado = 0
		 	end
		 	end
		 	when prox.ground.delta[0] &lt; 300 do
		 		if gameover &lt; 1 then
		 			call sound.play(20)
		 			gameover = 1	
		 		else
		 			motor.left.target = 0
		 			motor.right.target= 0
		 			call sound.play(20)
		 			mike= 0
		 			estado = 0
		 			gameover = 0
		 		end
		 		
		 	end
	
onevent rc5
	if rc5.command == 53 then
		call sound.play(40)
		mike = 0
		gameover = 0
	end
	if rc5.command == 80  then
		if prox.horizontal[2] &lt; 3000 then		
			estado = 1
			call sound.play(1)
	 		motor.left.target = 200
			motor.right.target = 200
		else
			call sound.play(6)
		end
		
	end
	
	if rc5.command == 87  then
			call sound.play(10)
			motor.left.target = 0
			motor.right.target = 0
			estado = 0
			gameover = 0			
	end

	if rc5.command == 81  then
			estado = 0
			gameover = 0
			call sound.play(2)
			motor.left.target = -200
			motor.right.target = 200
			timer.period[0] = 2500			
		end

	if rc5.command == 85 then
		estado = 0
		#if prox.horizontal[0] &lt; 1900 then
 			motor.left.target = -200
			motor.right.target = 200
			timer.period[0] = 1250
			call sound.play(4)
		#else
		#	call sound.play(6)
		#end
	end

	if rc5.command == 86 then
		estado  = 0
		#if prox.horizontal[4] &lt; 1900 then
			motor.left.target = 200
			motor.right.target = -200
			timer.period[0] = 1250
			call sound.play(3)
		#else
		#	call sound.play(6)
		#end
	end
	call math.copy(state, new_state)
	callsub display_state

onevent timer0
	timer.period[0] = 0
	# zero notes in sound block
	motor.left.target = 0
	motor.right.target = 0

</node>


</network>
